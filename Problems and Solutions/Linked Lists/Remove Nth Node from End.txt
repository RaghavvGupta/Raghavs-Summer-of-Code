/**
 * Definition for singly-linked list.
 * struct ListNode {
 *     int val;
 *     ListNode *next;
 *     ListNode() : val(0), next(nullptr) {}
 *     ListNode(int x) : val(x), next(nullptr) {}
 *     ListNode(int x, ListNode *next) : val(x), next(next) {}
 * };
 */
class Solution {
public:
    ListNode* removeNthFromEnd(ListNode* head, int n) {
        ListNode* start = new ListNode();
        start -> next = head;
        ListNode* slow = start;
        ListNode* fast = start;
        //ListNode* dummy = head;
        /*if(head -> next == NULL) return start -> next;*/
        int k = n;
        while(k--) fast = fast -> next;
        while(fast -> next != NULL){
            slow = slow -> next;
            fast = fast -> next ;
        }
        //slow = slow -> next;
        
        slow -> next = slow -> next -> next;
        //slow -> next -> next = NULL;
        return start -> next;
    }
};